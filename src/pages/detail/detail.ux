<template>
  <div class="page"  @swipe="toHomePage">
    <!-- 点击跳转详情页 -->
    <list class="list" bounces="true">
      <list-item class="item1 justify-between" type="costom"></list-item>
      <list-item class="item justify-between" type="costom" for="{{list}}" @click="navigateToPage($item.name)">
        <div class="center">
          <text class="name">{{ $item.name }}</text>
        </div>
      </list-item>
    </list>
    <image class="cover" src="/common/icon/cover.png"></image>
    <text class="time">{{ time }}</text>

    <!-- <text class="title">{{ which }}</text> -->
    <image class="back" src="/common/icon/back.png" onclick="back"></image>
  </div>
</template>

<script>
import router from "@system.router"
import app from "@system.app"
const dataMap = {
  "  英语688": [
    {name: "1-60"},
    {name: "61-120"},
    {name: "121-172"},
    {name: "173-240"},
    {name: "241-300"},
    {name: "301-344"},
    {name: "345-420"},
    {name: "421-480"},
    {name: "481-516"},
    {name: "517-588"},
    {name: "589-688"}
  ],
 
}
export default {
  // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖
  private: {
    title: "示例页面",
    time: "00:00",
    list: []
  },
  onInit() {
    // 直接通过映射获取列表
    console.log(this.which)
    this.list = dataMap[this.which] || []
    const updateTime = () => {
      const date = new Date()
      const hour = date.getHours().toString().padStart(2, "0")
      const minute = date.getMinutes().toString().padStart(2, "0")
      this.time = hour + ":" + minute
    }
    updateTime()
    this.timer = setInterval(updateTime, 60000)
  },
  onDestroy() {
    clearInterval(this.timer)
  },
  navigateToPage(name) {
    router.push({
      uri: "/pages/poem",
      params: {
        text: name
      }
    })
  },
  toHomePage(eve) {
    if (eve.direction === "right") {
      router.replace({
        uri: "/pages/index"
      })
    }
  },
  back() {
    router.replace({
      uri: "/pages/index"
    })
  }
}
</script>

<style>
.about {
  position: absolute;
  left: 258px;
  top: 6px;
  width: 72px;
  height: 72px;
}

.cover {
  position: absolute;
  left: 0px;
  top: 0px;
  width: 336px;
  height: 102px;
  opacity: 1;
}

.page {
  align-items: center;
  justify-content: center;
  background-color: #000000;
  flex: 1;
  display: flex;
  flex-direction: column;
  height: 100%;
  position: absolute;
  width: 100%;
}

.name {
  color: white;
}
.time {
	top: 20px;
	left: 70px;
	/* transform: translateX(-50%); */
	z-index: 20;
	width: 200px;
	height: 50px;
	background: rgba(0, 0, 0, 0.7);
	/* border: 1px solid rgba(255, 255, 255, 0.2); */
	font-size: 42px;
	font-weight: 600;
	color: rgba(255, 255, 255, 0.5);
	
	line-height: 50px;
	border-radius: 12px;
	text-align: center;
	vertical-align: top;
	position: absolute;
}
/* .title {
  position: absolute;
  color: white;
  background: rgba(255, 255, 255, 1);
  font-size: 32px;
  font-weight: 500;
  letter-spacing: 0px;
  line-height: 44.8px;
  color: rgba(255, 255, 255, 1);
  text-align: center;
  vertical-align: top;
  position: absolute;
  width: 100%;
  text-align: center;
  top: 35px;
} */

.list {
  width: 100%;
  flex: 1;
}

.item {
  height: 90px;
  margin-top: 15px;
  width: 324px;
  margin-bottom: 15px;
  border-radius: 20px;
  background-color: rgba(38, 38, 38, 1);
  padding: 15px;
}

.item1 {
  height: 40px;
  margin-top: 15px;
  margin-bottom: 15px;
  border-radius: 20px;
}

.back {
  position: absolute;
	left: 50px;
	top: 6px;
	width: 72px;
	height: 72px;
}
</style>